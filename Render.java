import tester.*;
import javalib.worldimages.*;
import javalib.funworld.*;

class TestWorldState extends World {
  IList<WorldImage> list;

  TestWorldState(IList<WorldImage> list) {
    this.list = list;
  }

  public WorldScene makeScene() {
    // fold(convert invaders to list of images) + (spaceship image) + fold(convert bullets to images)
    return list.fold(new CrunchWorldImage(), new WorldScene(600, 600));
  }

  //not yet implemented
  public World onTick() {
    return null;
  }

  //not yet implemented
  public World onTickTest() {
    return null;
  }
}

class WorldState extends World {
  IList<IList<Invader>> invaders;
  Spaceship spaceship;
  IList<IBullet> bullets;

  WorldState(IList<IList<Invader>> invaders, Spaceship spaceship, IList<IBullet> bullets) {
    this.invaders = invaders;
    this.spaceship = spaceship;
    this.bullets = bullets;
  }

  public WorldScene makeScene() {
    // fold(convert invaders to list of images) + (spaceship image) + 
    // fold(convert bullets to images)
    // generates a graphic using the data contained in WorldState 
    // following this process:
    // 1.) Convert IList<IList<Invaders>> to IList<IList<WorldImage>> 
    // using Map of InvaderListToImageList
    // 2.) Fold the IList<IList<WorldImage>> generated by 1. into a 
    // single WorldScene using placeImageXY
    // 3.) attach the spaceship to the WorldScene generated by 2.
    //  using placeImageXY
    // 4.) Convert IList<Bullet> to IList<WorldImage> using Map 
    // of BulletToImage
    // 5.) Fold the IList<WorldImage> generated by 4. 
    // using placeImageXY with 3. ast the initial condition
    return bullets.map(new BulletToImage()).fold(new CrunchWorldImage(), invaders.map(new InvaderListToImageList())
        .fold(new CrunchInvaderList(), new WorldScene(600, 600)).placeImageXY(spaceship.draw(), 300, 300));
  }

  //not yet implemented
  public World onTick() {
    return null;
  }

  //not yet implemented
  public World onTickTest() {
    return null;
  }
}
